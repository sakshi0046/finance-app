@model FinancialApp.Models.Transaction
@{
    ViewData["Title"] = "Transaction Details";
}

<div class="transaction-details-container">
    <div class="transaction-header">
        <h1>Transaction Details</h1>
        <div class="transaction-badge @(Model.Type == "Deposit" ? "income" : Model.Type == "Withdrawal" ? "expense" : "transfer")">
            @Model.Type
        </div>
    </div>

    <div class="transaction-card">
        <div class="transaction-amount-section">
            <div class="transaction-amount @(Model.Type == "Deposit" ? "positive" : Model.Type == "Withdrawal" ? "negative" : "neutral")">
                @Model.Amount.ToString("C")
            </div>
            <div class="transaction-date">
                @Model.CreatedAt.ToLocalTime().ToString("MMM dd, yyyy - h:mm tt")
            </div>
        </div>

        <div class="transaction-info-grid">
            <div class="info-item">
                <div class="info-label">Account</div>
                <div class="info-value">@Model.Account.AccountName</div>
            </div>

            <div class="info-item">
                <div class="info-label">Type</div>
                <div class="info-value">@Model.Type</div>
            </div>

            <div class="info-item">
                <div class="info-label">Category</div>
                <div class="info-value">
                    @if (Model.Category != null)
                    {
                        <span class="category-tag">@Model.Category.Name</span>
                    }
                    else
                    {
                        <span class="category-tag no-category">None</span>
                    }
                </div>
            </div>

            <div class="info-item description-item">
                <div class="info-label">Description</div>
                <div class="info-value description-value">@Model.Description</div>
            </div>
        </div>
    </div>

    <div class="action-buttons">
        <a asp-action="Index" class="btn btn-back">
            <i class="fas fa-arrow-left"></i> Back to List
        </a>
    </div>
</div>

<style>
    :root {
        --primary-color: #2563eb;
        --secondary-color: #3b82f6;
        --accent-color: #1e40af;
        --positive-color: #10b981;
        --negative-color: #ef4444;
        --text-color: #1f2937;
        --text-light: #6b7280;
        --bg-color: #f9fafb;
        --card-bg: #ffffff;
        --border-color: #e5e7eb;
        --hover-bg: #f3f4f6;
        --transition-speed: 0.3s;
    }

    .transaction-details-container {
        max-width: 800px;
        margin: 0 auto;
        padding: 2rem 1rem;
        font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;
        color: var(--text-color);
    }

    .transaction-header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 1.5rem;
    }

        .transaction-header h1 {
            font-size: 1.75rem;
            font-weight: 700;
            margin: 0;
            color: var(--text-color);
        }

    .transaction-badge {
        padding: 0.5rem 1rem;
        border-radius: 9999px;
        font-size: 0.875rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.05em;
        color: white;
    }

        .transaction-badge.income {
            background-color: var(--positive-color);
        }

        .transaction-badge.expense {
            background-color: var(--negative-color);
        }

        .transaction-badge.transfer {
            background-color: var(--secondary-color);
        }

    .transaction-amount.neutral {
        color: var(--secondary-color);
    }

    .transaction-card {
        background-color: var(--card-bg);
        border-radius: 1rem;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        overflow: hidden;
        transition: transform var(--transition-speed), box-shadow var(--transition-speed);
    }

        .transaction-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
        }

    .transaction-amount-section {
        padding: 2rem;
        text-align: center;
        border-bottom: 1px solid var(--border-color);
        background-image: linear-gradient(135deg, #f3f4f6 0%, #e5e7eb 100%);
    }

    .transaction-amount {
        font-size: 2.25rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
    }

        .transaction-amount.positive {
            color: var(--positive-color);
        }

        .transaction-amount.negative {
            color: var(--negative-color);
        }

    .transaction-date {
        color: var(--text-light);
        font-size: 0.875rem;
    }

    .transaction-info-grid {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 1.5rem;
        padding: 2rem;
    }

    .description-item {
        grid-column: span 2;
    }

    .info-item {
        transition: transform var(--transition-speed);
    }

        .info-item:hover {
            transform: translateY(-3px);
        }

    .info-label {
        font-size: 0.875rem;
        text-transform: uppercase;
        letter-spacing: 0.05em;
        font-weight: 600;
        color: var(--text-light);
        margin-bottom: 0.5rem;
    }

    .info-value {
        font-size: 1rem;
        font-weight: 500;
        color: var(--text-color);
    }

    .description-value {
        line-height: 1.5;
    }

    .category-tag {
        display: inline-flex;
        align-items: center;
        padding: 0.25rem 0.75rem;
        border-radius: 9999px;
        background-color: var(--primary-color);
        color: white;
        font-size: 0.875rem;
        font-weight: 500;
    }

        .category-tag.no-category {
            background-color: var(--text-light);
        }

    .action-buttons {
        display: flex;
        gap: 1rem;
        margin-top: 2rem;
    }

    .btn {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 0.75rem 1.5rem;
        border-radius: 0.5rem;
        font-size: 1rem;
        font-weight: 500;
        text-decoration: none;
        transition: all var(--transition-speed);
    }

        .btn i {
            margin-right: 0.5rem;
        }

    .btn-back {
        background-color: var(--bg-color);
        color: var(--text-color);
        border: 1px solid var(--border-color);
    }

        .btn-back:hover {
            background-color: var(--hover-bg);
        }

    .btn-edit {
        background-color: var(--primary-color);
        color: white;
    }

        .btn-edit:hover {
            background-color: var(--accent-color);
        }

    /* Add animation effects */
    @@keyframes fadeIn {
        from

    {
        opacity: 0;
        transform: translateY(10px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    .transaction-card {
        animation: fadeIn 0.5s ease-out;
    }

    .info-item {
        position: relative;
    }

        .info-item::after {
            content: '';
            position: absolute;
            bottom: -5px;
            left: 0;
            width: 0;
            height: 2px;
            background-color: var(--primary-color);
            transition: width var(--transition-speed);
        }

        .info-item:hover::after {
            width: 100%;
        }

    /* Responsive adjustments */
    @@media (max-width: 640px) {
        .transaction-info-grid

    {
        grid-template-columns: 1fr;
    }

    .description-item {
        grid-column: span 1;
    }

    .transaction-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 1rem;
    }

    .action-buttons {
        flex-direction: column;
        width: 100%;
    }

    .btn {
        width: 100%;
    }

    }
</style>

@section Scripts {
    <script>
        // Add Font Awesome if not already included in your layout
        if (!document.querySelector('link[href*="font-awesome"]')) {
            const fontAwesome = document.createElement('link');
            fontAwesome.rel = 'stylesheet';
            fontAwesome.href = 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css';
            document.head.appendChild(fontAwesome);
        }

        // Optional: Add some animation when the page loads
        document.addEventListener('DOMContentLoaded', function() {
            const infoItems = document.querySelectorAll('.info-item');
            infoItems.forEach((item, index) => {
                item.style.opacity = '0';
                setTimeout(() => {
                    item.style.transition = 'opacity 0.3s ease-out';
                    item.style.opacity = '1';
                }, 100 + (index * 100));
            });
        });
    </script>
}