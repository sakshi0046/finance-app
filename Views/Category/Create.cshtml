@model FinancialApp.Models.TransactionCategory
@{
    ViewData["Title"] = "Create Category";
}

<div class="category-create-container">
    <div class="category-create-card">
        <div class="category-create-header">
            <h2 class="title">Create Category</h2>
            <p class="subtitle">Add a new transaction category to your financial dashboard</p>
        </div>

        <form asp-action="Create" method="post" class="category-form">
            @Html.AntiForgeryToken()

            <div class="form-group">
                <label asp-for="Name" class="control-label">Category Name</label>
                <input asp-for="Name" class="form-control custom-input" placeholder="Enter category name" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="action-buttons">
                <button type="submit" class="btn-primary-action">
                    <span class="btn-text">Save</span>
                    <span class="btn-icon">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"></path>
                            <polyline points="17 21 17 13 7 13 7 21"></polyline>
                            <polyline points="7 3 7 8 15 8"></polyline>
                        </svg>
                    </span>
                </button>
                <a asp-action="Index" class="btn-secondary-action">
                    <span class="btn-text">Cancel</span>
                    <span class="btn-icon">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <line x1="18" y1="6" x2="6" y2="18"></line>
                            <line x1="6" y1="6" x2="18" y2="18"></line>
                        </svg>
                    </span>
                </a>
            </div>
        </form>
    </div>
</div>

<style>
    /* Modern Premium Styling */
    :root {
        --primary-color: #4361ee;
        --primary-hover: #3a56d4;
        --secondary-color: #ffffff;
        --bg-color: #f8f9fc;
        --card-bg: #ffffff;
        --text-color: #333;
        --border-radius: 12px;
        --box-shadow: 0 8px 30px rgba(0, 0, 0, 0.05);
        --transition: all 0.3s ease;
    }

    body {
        background-color: var(--bg-color);
        color: var(--text-color);
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
    }

    .category-create-container {
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 3rem 1rem;
    }

    .category-create-card {
        background: var(--card-bg);
        border-radius: var(--border-radius);
        box-shadow: var(--box-shadow);
        width: 100%;
        max-width: 500px;
        padding: 2rem;
        transition: var(--transition);
    }

        .category-create-card:hover {
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.08);
        }

    .category-create-header {
        margin-bottom: 2rem;
        text-align: center;
    }

    .title {
        font-size: 1.75rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
        color: #333;
    }

    .subtitle {
        color: #6c757d;
        font-size: 0.95rem;
    }

    .category-form {
        margin-top: 1.5rem;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .control-label {
        display: block;
        margin-bottom: 0.5rem;
        font-weight: 500;
        color: #495057;
    }

    .custom-input {
        width: 100%;
        height: 48px;
        border-radius: 8px;
        border: 1px solid #ced4da;
        padding: 0.75rem 1rem;
        font-size: 1rem;
        transition: var(--transition);
    }

        .custom-input:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.15);
        }

    .text-danger {
        color: #dc3545;
        font-size: 0.85rem;
        margin-top: 0.5rem;
        display: block;
    }

    .action-buttons {
        display: flex;
        justify-content: space-between;
        margin-top: 2rem;
        gap: 1rem;
    }

    .btn-primary-action, .btn-secondary-action {
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 0.75rem 1.25rem;
        border-radius: 8px;
        font-weight: 500;
        font-size: 1rem;
        transition: var(--transition);
        text-decoration: none;
        cursor: pointer;
        border: none;
        flex: 1;
    }

    .btn-primary-action {
        background-color: var(--primary-color);
        color: white;
    }

    .btn-secondary-action {
        background-color: #f1f3f9;
        color: #495057;
    }

    .btn-primary-action:hover {
        background-color: var(--primary-hover);
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(67, 97, 238, 0.2);
    }

    .btn-secondary-action:hover {
        background-color: #e9ecef;
        transform: translateY(-2px);
    }

    .btn-text {
        margin-right: 0.5rem;
    }

    .btn-icon {
        display: flex;
        opacity: 0;
        transform: translateX(-10px);
        transition: var(--transition);
    }

    .btn-primary-action:hover .btn-icon,
    .btn-secondary-action:hover .btn-icon {
        opacity: 1;
        transform: translateX(0);
    }

    /* Responsive adjustments */
    @@media (max-width: 576px) {
        .category-create-card

    {
        padding: 1.5rem;
    }

    .action-buttons {
        flex-direction: column;
    }

    .btn-primary-action, .btn-secondary-action {
        width: 100%;
    }

    }
</style>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Add ripple effect to buttons
        document.querySelectorAll('.btn-primary-action, .btn-secondary-action').forEach(button => {
            button.addEventListener('mousedown', function(e) {
                const x = e.clientX - this.getBoundingClientRect().left;
                const y = e.clientY - this.getBoundingClientRect().top;

                const ripple = document.createElement('span');
                ripple.classList.add('ripple-effect');
                ripple.style.left = `${x}px`;
                ripple.style.top = `${y}px`;

                this.appendChild(ripple);

                setTimeout(() => {
                    ripple.remove();
                }, 600);
            });
        });
    </script>
    <style>
        /* Ripple effect styles */
        .btn-primary-action, .btn-secondary-action {
            position: relative;
            overflow: hidden;
        }

        .ripple-effect {
            position: absolute;
            border-radius: 50%;
            background-color: rgba(255, 255, 255, 0.4);
            width: 100px;
            height: 100px;
            margin-top: -50px;
            margin-left: -50px;
            animation: ripple 0.6s linear;
            transform: scale(0);
            opacity: 1;
        }

        @@keyframes ripple {
            to

        {
            transform: scale(2.5);
            opacity: 0;
        }

        }
    </style>
}