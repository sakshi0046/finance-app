@model IEnumerable<FinancialApp.Models.User>
@{
    ViewData["Title"] = "User Management";
}

<div class="user-management">
    <!-- Header Section -->
    <div class="header">
        <div class="header-content">
            <h1><i class="fas fa-users-cog"></i> User Management</h1>
            <p>Manage all system users and permissions</p>
        </div>
        <a asp-action="Create" class="btn-primary">
            <i class="fas fa-plus"></i> Add User
        </a>
    </div>

    <!-- Control Bar -->
    <div class="control-bar">
        <div class="search-box">
            <i class="fas fa-search"></i>
            <input type="text" id="userSearch" placeholder="Search users...">
        </div>
        <div class="filters">
            <select id="roleFilter">
                <option value="">All Roles</option>
                <option value="Admin">Admin</option>
                <option value="User">User</option>
            </select>
        </div>
    </div>

    <!-- User Table -->
    <div class="table-container">
        <table id="userTable">
            <thead>
                <tr>
                    <th>User</th>
                    <th>Email</th>
                    <th>Role</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model)
                {
                    <tr class="user-row" data-role="@user.Role">
                        <td>
                            <div class="user-info">
                                <div class="avatar">
                                    @user.Username.Substring(0, 1).ToUpper()
                                </div>
                                <div>
                                    <div class="username">@user.Username</div>
                                    <div class="last-login">Last active: @DateTime.Now.AddDays(-1).ToString("MMM d, yyyy")</div>
                                </div>
                            </div>
                        </td>
                        <td class="email">@user.Email</td>
                        <td>
                            <span class="role-tag @user.Role.ToLower()">@user.Role</span>
                        </td>
                        <td>
                            <span class="status active">Active</span>
                        </td>
                        <td>
                            <div class="actions">
                                <a asp-action="Edit" asp-route-id="@user.Id" class="action-btn" title="Edit">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <a asp-action="AssignRoles" asp-route-id="@user.Id" class="action-btn" title="Change Role">
                                    <i class="fas fa-user-tag"></i>
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Pagination -->
    <div class="pagination">
        <div class="pagination-info">
            Showing <span id="showingCount">1-@Model.Count()</span> of <span id="totalCount">@Model.Count()</span> users
        </div>
    </div>
</div>

<!-- Font Awesome -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

<style>
    /* Modern Color Scheme */
    :root {
        --primary: #4361ee;
        --primary-light: #eef2ff;
        --secondary: #7209b7;
        --success: #06d6a0;
        --warning: #ffd166;
        --danger: #ef476f;
        --dark: #212529;
        --light: #f8f9fa;
        --gray-100: #f8f9fa;
        --gray-200: #e9ecef;
        --gray-300: #dee2e6;
        --gray-400: #ced4da;
        --gray-500: #adb5bd;
        --gray-600: #6c757d;
        --gray-700: #495057;
        --gray-800: #343a40;
        --gray-900: #212529;
        --border-radius: 8px;
        --box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        --transition: all 0.2s ease;
    }

    /* Base Styles */
    body {
        font-family: 'Segoe UI', 'Roboto', sans-serif;
        background-color: #f5f7fb;
        color: var(--gray-800);
        margin: 0;
        padding: 0;
    }

    .user-management {
        max-width: 1200px;
        margin-top: 10vh;
        padding: 0 1rem;
    }

    /* Header Styles */
    .header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
    }

    .header-content h1 {
        font-size: 1.75rem;
        margin: 0;
        color: var(--dark);
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

        .header-content h1 i {
            color: var(--primary);
        }

    .header-content p {
        margin: 0.25rem 0 0 0;
        color: var(--gray-600);
    }

    /* Button Styles */
    .btn-primary {
        background-color: var(--primary);
        color: white;
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: var(--border-radius);
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-weight: 500;
        cursor: pointer;
        transition: var(--transition);
        text-decoration: none;
    }

        .btn-primary:hover {
            background-color: #3a56d4;
            transform: translateY(-2px);
            box-shadow: var(--box-shadow);
        }

    /* Control Bar */
    .control-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1.5rem;
        flex-wrap: wrap;
        gap: 1rem;
        background: white;
        padding: 1rem;
        border-radius: var(--border-radius);
        box-shadow: var(--box-shadow);
    }

    .search-box {
        position: relative;
        flex: 1;
        max-width: 400px;
    }

        .search-box i {
            position: absolute;
            left: 1rem;
            top: 50%;
            transform: translateY(-50%);
            color: var(--gray-500);
        }

        .search-box input {
            width: 100%;
            padding: 0.75rem 1rem 0.75rem 2.5rem;
            border: 1px solid var(--gray-300);
            border-radius: var(--border-radius);
            transition: var(--transition);
        }

            .search-box input:focus {
                outline: none;
                border-color: var(--primary);
                box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.15);
            }

    .filters {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

        .filters select {
            padding: 0.75rem 2rem 0.75rem 1rem;
            border: 1px solid var(--gray-300);
            border-radius: var(--border-radius);
            background-color: white;
            appearance: none;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%236c757d' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");
            background-repeat: no-repeat;
            background-position: right 0.75rem center;
            cursor: pointer;
        }

    /* Table Styles */
    .table-container {
        background: white;
        border-radius: var(--border-radius);
        box-shadow: var(--box-shadow);
        overflow: hidden;
    }

    table {
        width: 100%;
        border-collapse: collapse;
    }

    th {
        text-align: left;
        padding: 1rem;
        background: var(--gray-100);
        color: var(--gray-700);
        font-weight: 600;
        border-bottom: 1px solid var(--gray-200);
    }

    td {
        padding: 1rem;
        border-bottom: 1px solid var(--gray-200);
        vertical-align: middle;
    }

    tr:last-child td {
        border-bottom: none;
    }

    .user-info {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .avatar {
        width: 40px;
        height: 40px;
        background: linear-gradient(135deg, var(--primary), var(--secondary));
        color: white;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
    }

    .username {
        font-weight: 500;
    }

    .last-login {
        font-size: 0.875rem;
        color: var(--gray-600);
    }

    .email {
        color: var(--primary);
    }

    /* Role Tags */
    .role-tag {
        display: inline-block;
        padding: 0.35rem 0.75rem;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 500;
    }

        .role-tag.admin {
            background-color: #ffefef;
            color: #e63946;
        }

        .role-tag.user {
            background-color: #e7f5ff;
            color: #1e88e5;
        }

        .role-tag.manager {
            background-color: #e6f7eb;
            color: #2e7d32;
        }

    /* Status Tags */
    .status {
        display: inline-block;
        padding: 0.35rem 0.75rem;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 500;
    }

        .status.active {
            background-color: #e6f7eb;
            color: #2e7d32;
        }

    /* Action Buttons */
    .actions {
        display: flex;
        gap: 0.5rem;
    }

    .action-btn {
        width: 36px;
        height: 36px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: white;
        border: 1px solid var(--gray-300);
        border-radius: var(--border-radius);
        color: var(--gray-600);
        cursor: pointer;
        transition: var(--transition);
        text-decoration: none;
    }

        .action-btn:hover {
            background: var(--gray-100);
            color: var(--primary);
            transform: translateY(-2px);
        }

        .action-btn i {
            font-size: 0.9rem;
        }

    /* Pagination */
    .pagination {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 1.5rem;
    }

    .pagination-info {
        color: var(--gray-600);
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .header {
            flex-direction: column;
            align-items: flex-start;
            gap: 1rem;
        }

        .control-bar {
            flex-direction: column;
            align-items: stretch;
        }

        .search-box {
            max-width: 100%;
        }

        .filters {
            flex-direction: column;
            align-items: stretch;
            gap: 0.75rem;
        }

        table {
            display: block;
            overflow-x: auto;
        }

        .pagination {
            flex-direction: column;
            gap: 1rem;
        }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Initialize elements
        const searchInput = document.getElementById('userSearch');
        const roleFilter = document.getElementById('roleFilter');
        const userTable = document.getElementById('userTable');
        const showingCount = document.getElementById('showingCount');
        const totalCount = document.getElementById('totalCount');

        // Store original rows for filtering
        const originalRows = Array.from(document.querySelectorAll('.user-row'));

        // Filter function
        const filterTable = () => {
            const searchTerm = searchInput.value.toLowerCase();
            const selectedRole = roleFilter.value;
            let visibleCount = 0;

            originalRows.forEach(row => {
                const username = row.querySelector('.username').textContent.toLowerCase();
                const email = row.querySelector('.email').textContent.toLowerCase();
                const role = row.dataset.role;

                const matchesSearch = username.includes(searchTerm) || email.includes(searchTerm);
                const matchesRole = selectedRole === '' || role === selectedRole;

                if (matchesSearch && matchesRole) {
                    row.style.display = '';
                    visibleCount++;
                } else {
                    row.style.display = 'none';
                }
            });

            showingCount.textContent = `1-${visibleCount}`;
            totalCount.textContent = visibleCount;
        };

        // Initialize table
        filterTable();

        // Event listeners
        searchInput.addEventListener('input', filterTable);
        roleFilter.addEventListener('change', filterTable);

        // Hover effects
        userTable.addEventListener('mouseover', function(e) {
            const row = e.target.closest('.user-row');
            if (row) {
                row.style.backgroundColor = 'var(--primary-light)';
            }

            const btn = e.target.closest('.action-btn');
            if (btn) {
                btn.style.transform = 'translateY(-2px)';
            }
        });

        userTable.addEventListener('mouseout', function(e) {
            const row = e.target.closest('.user-row');
            if (row) {
                row.style.backgroundColor = '';
            }

            const btn = e.target.closest('.action-btn');
            if (btn) {
                btn.style.transform = '';
            }
        });
    });
</script>